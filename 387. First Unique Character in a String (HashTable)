Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.


Solution: ------------------------------------------------------------ HashTable
--------------------------------------------- O(n) T, O(1) S => space complexity is constant O(26) ~ O(1) for any length of string
class Solution(object):
    def firstUniqChar(self, s):
        """
        :type s: str
        :rtype: int
        """
        HashTable = collections.defaultdict(int)
        for w in s:
            HashTable[w] += 1
        for i in range(len(s)):                          # Here is the smart key point
            if HashTable[s[i]] == 1:                     # since we are traversing the string from start to end
                return i                                 # the first s[i] we find to be unique must be the first non-repeating character
        return -1
