Write a program to find the n-th ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. 

Example:

Input: n = 10
Output: 12
Explanation: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.
Note:  

1 is typically treated as an ugly number.
n does not exceed 1690.

Solution:
class Solution(object):
    def nthUglyNumber(self, n):
        dp_ugly = [1] * n                                                     # dp initialization
        i2, i3, i5 = 0, 0, 0                                                  # Introduce three more variables: i2, i3, i5
        for i in range(1, n):
            u2, u3, u5 = 2 * dp_ugly[i2], 3 * dp_ugly[i3], 5 * dp_ugly[i5]    
            dp_ugly[i] = min(u2, u3, u5)
            if dp_ugly[i] == u2:
                i2 += 1
            if dp_ugly[i] == u3:
                i3 += 1
            if dp_ugly[i] == u5:
                i5 += 1
        return dp_ugly[n - 1]
                
        """
        :type n: int
        :rtype: int
        """
