Given two arrays, write a function to compute their intersection.

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Note:

Each element in the result must be unique.
The result can be in any order.


Solution no.1: ----------------------------------------------- Set
-------------------------------------------------------------- O(n) T, O(n) S
class Solution(object):
    def intersection(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        set1, set2 = set(nums1), set(nums2)
        res = []
        for item in set1:
            if item in set2:
                res.append(item)
        return res

Follow up: If the two arrays are sorted, solved it in O(n) T and O(1) S
Solution: ---------------------------------------------------- Two Pointers
class Solution(object):
    def intersection(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        if not nums1 or not nums2:
            return None
        p1, p2 = 0, 0
        nums1.sort()
        nums2.sort()
        res = []
        while p1 < len(nums1) and p2 < len(nums2):
            if p1 != 0 and nums1[p1] == nums1[p1 - 1]:
                p1 += 1
                continue
            if p2 != 0 and nums2[p2] == nums2[p2 - 1]:
                p2 += 1
                continue
            if nums1[p1] == nums2[p2]:
                res.append(nums1[p1])
                p1 += 1
                p2 += 1
            else:
                if nums1[p1] > nums2[p2]:
                    p2 += 1
                else:
                    p1 += 1
        return res
