Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string.

If the last word does not exist, return 0.

Note: A word is defined as a character sequence consists of non-space characters only.

Example:

Input: "Hello World"
Output: 5


Solution no.1: ------------------------------------------- my own
---------------------------------------------------------- O(n) T and S
class Solution(object):
    def lengthOfLastWord(self, s):
        """
        :type s: str
        :rtype: int
        """
        return 0 if len(s) == 0 or len(s.split()) == 0 else len(s.split()[-1])
        # len(s) == 0 is for ""
        # len(s.split()) == 0 is for " "
        
        
Solution no.2: --------------------------------------------------- Two Pointers
---------------------------------------------------------- O(n) T, O(1) S
class Solution(object):
    def lengthOfLastWord(self, s):
        """
        :type s: str
        :rtype: int
        """
        slow = -1
        while slow >= -len(s) and s[slow] == " ":   # iterate from the end and count how many spaces in the end
            slow -= 1
        fast = slow
        while fast >= -len(s) and s[fast] != " ":   # iterate over last word
            fast -= 1
        return slow - fast


Java Versionï¼š
class Solution {
    public int lengthOfLastWord(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        int res = 0;
        for (int i = s.length() - 1; i >= 0; i --) {
            if (res == 0 && s.charAt(i) == ' ') {
                continue;
            }
            else if (s.charAt(i) == ' ') {
                break;
            } else {
                res ++;
            }
        }
        return res;
    }
}
