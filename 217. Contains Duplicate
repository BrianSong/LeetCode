Given an array of integers, find if the array contains any duplicates.

Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.

Example 1:

Input: [1,2,3,1]
Output: true
Example 2:

Input: [1,2,3,4]
Output: false
Example 3:

Input: [1,1,1,3,3,4,3,2,4,2]
Output: true

Solution no.1 (my own):
class Solution(object):
    def containsDuplicate(self, nums):
        dic = {}
        if len(nums) == 1 or nums is None:
            return False
        for number in nums:
            dic[number] = dic.get(number, 0) + 1
        for key, value in dic.iteritems(): # iteritems() traverse over the dictionary, like enumerate() for list
            if value != 1:
                return True
        return False
        """
        :type nums: List[int]
        :rtype: bool
        """
        
Solution 2: using set() build in python:
class Solution(object):
    def containsDuplicate(self, nums):
        return not len(nums) == len(set(nums))
        """
        :type nums: List[int]
        :rtype: bool
        """

Solution 3: Hashtable
class Solution(object):
    def containsDuplicate(self, nums):
        hashtable = {}
        for item in nums:
            if not item in hashtable:
                hashtable[item] = 1
            else:
                return True
        return False

