Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]

Solution no.1 (my own):
class Solution(object):
    def moveZeroes(self, nums):
        num_zero = 0
        for index, item in enumerate(nums):
            if item == 0:
                num_zero += 1
            else:
                nums[index - num_zero] = item
        for i in range(len(nums) - 1, len(nums) - num_zero -1, -1): 
            nums[i] = 0
'''
Using two for loop, not the best solution
'''
Solution no.2:
# in-place
def moveZeroes(self, nums):
    zero = 0  # records the position of "0"
    for i in xrange(len(nums)):
        if nums[i] != 0: # if all none zero, this make sure that it is continuelly swaping its value with itself
            nums[i], nums[zero] = nums[zero], nums[i]
            zero += 1 # if facing 0, zero will not add one, so, in this way, zero indicates the 0's index
