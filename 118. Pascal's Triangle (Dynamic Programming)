Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.


In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:

Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

Solution:
class Solution(object):
    def generate(self, numRows):
        res = [[1]*(i + 1) for i in range(numRows)]           # As for any 2-D list result, we should find a way to initialize it first,
                                                              # then, we can use res[i][j] to assign or assess the values in it very easy
        for i in range(2, numRows):
            for j in range(1, i):                             # Observe the triangle to find the relationship between i and j
                                                              # and use it directly in the assignment instead of only focus on the 
                                                              # repeated time !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                res[i][j] = res[i - 1][j - 1] + res[i - 1][j] 
        return res
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
