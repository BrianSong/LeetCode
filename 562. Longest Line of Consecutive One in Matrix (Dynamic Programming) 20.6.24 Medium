Given a 01 matrix M, find the longest line of consecutive one in the matrix. The line could be horizontal, vertical, diagonal or anti-diagonal.
Example:
Input:
[[0,1,1,0],
 [0,1,1,0],
 [0,0,0,1]]
Output: 3
Hint: The number of elements in the given matrix will not exceed 10,000.


Solution: O(m * n) T and S
class Solution(object):
    def longestLine(self, M):
        """
        :type M: List[List[int]]
        :rtype: int
        """
        if not M:
            return 0
        m, n = len(M), len(M[0])
        dp = [[[0 for k in range(4)] for j in range(n)] for i in range(m)]
        res = float('-inf')
        for i in range(m):
            for j in range(n):
                if M[i][j] == 0:
                    continue
                for k in range(4):
                    dp[i][j][k] = 1
                if i > 0 and j > 0:
                    dp[i][j][0] += dp[i - 1][j - 1][0]
                if i > 0:
                    dp[i][j][1] += dp[i - 1][j][1]
                if j > 0:
                    dp[i][j][2] += dp[i][j - 1][2]
                if i > 0 and j < n - 1:                                               # anti-diagonal
                    dp[i][j][3] += dp[i - 1][j + 1][3]
                res = max(res, dp[i][j][0], dp[i][j][1], dp[i][j][2], dp[i][j][3])
        return res if res != float('-inf') else 0
