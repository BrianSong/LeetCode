Merge two sorted linked lists and return it as a new list. 
The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

Solution: --------------------------------------------- Linked List + Iteration
------------------------------------------ O(m + n) T, O(1) S
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if not l1:
            return l2
        if not l2:
            return l1
        dummy = ListNode(0)
        prev = dummy
        while l1 and l2:
            if l1.val <= l2.val:
                newNode = ListNode(l1.val)
                prev.next = newNode
                prev = newNode                                          # prev = newNode instead of newNode = prev !!!!!!!!!!!!
                l1 = l1.next
            else:
                newNode = ListNode(l2.val)
                prev.next = newNode
                prev = newNode
                l2 = l2.next
        if not l1 and l2:
            prev.next = l2
        elif not l2 and l1:
            prev.next = l1
        return dummy.next
