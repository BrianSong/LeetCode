Given a sorted linked list, delete all duplicates such that each element appear only once.

Example 1:

Input: 1->1->2
Output: 1->2
Example 2:

Input: 1->1->2->3->3
Output: 1->2->3

Solution:
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteDuplicates(self, head):
        if head is None:                              # Always remember to consider extreme cases, especially during the interview!!!!!
            return None
        currnode = head
        while currnode.next != None:
            if currnode.val != currnode.next.val:
                currnode = currnode.next
            else:
                currnode.next = currnode.next.next
        return head
        """
        :type head: ListNode
        :rtype: ListNode
        """
