Given an array of integers, find if the array contains any duplicates.

Your function should return true if any value appears at least twice in the array, 
and it should return false if every element is distinct.

Example 1:

Input: [1,2,3,1]
Output: true
Example 2:

Input: [1,2,3,4]
Output: false
Example 3:

Input: [1,1,1,3,3,4,3,2,4,2]
Output: true


Solution no.1: ----------------------------------------------- Hashtable
-------------------------------------------------------------- O(n) T, O(n) S
class Solution(object):
    def containsDuplicate(self, nums):
        hashtable = {}
        for item in nums:
            if not item in hashtable:
                hashtable[item] = 1
            else:
                return True
        return False


Solution no.2: -------------------------------------------------- Set()
----------------------------------------------------------------- O(n) T, O(n) S
class Solution(object):
    def containsDuplicate(self, nums):
        return not len(nums) == len(set(nums))
        """
        :type nums: List[int]
        :rtype: bool
        """


Java Version no.1:
class Solution {
    public boolean containsDuplicate(int[] nums) {
        if (nums == null || nums.length == 0) {
            return false;
        }
        Set<Integer> s = new HashSet<>();
        for (int num : nums) {
            if (s.contains(num)) {
                return true;
            }
            s.add(num);
        }
        return false;
    }
}


Java Version no.2:
class Solution {
    public boolean containsDuplicate(int[] nums) {
        if (nums == null || nums.length == 0) {
            return false;
        }
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 1; i ++) {
            if (nums[i] == nums[i + 1]) {
                return true;
            }
        }
        return false;
    }
}
