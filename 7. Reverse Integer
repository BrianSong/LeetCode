Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. 
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

Solution:
class Solution(object):
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        rev = 0
        if x < 0:                                       # Hand over negative cases
            currx = - x 
        else:
            currx = x
        while currx != 0:
            newrev = rev * 10 + currx % 10
            if newrev > pow(2, 31) - 1: return 0        # Hand over overflow cases
            rev = newrev
            currx /= 10
        if x < 0:
            return -rev
        return rev
