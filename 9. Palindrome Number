Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Example 1:

Input: 121
Output: true
Example 2:

Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
Follow up:

Coud you solve it without converting the integer to a string?

Solution no.1(my own):
class Solution(object):
    def isPalindrome(self, x):
        string  = str(x)
        left, right = 0, len(string) - 1
        while left <= right:
            if string[left] == string[right]:
                left += 1
                right -= 1
            else:
                return False
        return True
        """
        :type x: int
        :rtype: bool
        """
        
class Solution(object):
    def isPalindrome(self, x):
        if x < 0:
            return False
        return str(x) == str(x)[::-1]
        """
        :type x: int
        :rtype: bool
        """
        
Solution no.2: ------------------------------------ Follow up answer (without convert the number into a string)
class Solution(object):
    def isPalindrome(self, x):
    
        // Special cases:
        // As discussed above, when x < 0, x is not a palindrome.
        // Also if the last digit of the number is 0, in order to be a palindrome,
        // the first digit of the number also needs to be 0.
        // Only 0 satisfy this property.
        
        if x < 0 or (x % 10 == 0 and x != 0):
            return False
        reversenum = 0
        while (x > reversenum):
            reversenum = reversenum * 10 + x % 10
            x /= 10
            
        // When the length is an odd number, we can get rid of the middle digit by revertedNumber/10
        // For example when the input is 12321, at the end of the while loop we get x = 12, revertedNumber = 123,
        // since the middle digit doesn't matter in palidrome(it will always equal to itself), we can simply get rid of it.
        
        return x == reversenum or x == reversenum / 10
        """
        :type x: int
        :rtype: bool
        """
