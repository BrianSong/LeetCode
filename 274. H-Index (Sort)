Given an array of citations (each citation is a non-negative integer) of a researcher, 
write a function to compute the researcher's h-index.

According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her N papers have at least h citations each, 
and the other N âˆ’ h papers have no more than h citations each."

Example:

Input: citations = [3,0,6,1,5]
Output: 3 
Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had 
             received 3, 0, 6, 1, 5 citations respectively. 
             Since the researcher has 3 papers with at least 3 citations each and the remaining 
             two with no more than 3 citations each, her h-index is 3.
Note: If there are several possible values for h, the maximum one is taken as the h-index.

Solution:
class Solution(object):
    def hIndex(self, citations):
        """
        :type citations: List[int]
        :rtype: int
        """
        n = len(citations)             # How many papers total 
        papers = [0] * (n + 1)         # papers[i] is the number of papers with i citations
        for c in citations:
            papers[min(c, n)] += 1     # We want min(c, n) because no matter how high the c is, it can be only counted as n maximum
                                       # since the result cannot exceed n
        i, s = n, papers[-1]           # count from behind, i is the citiation, s is the number of papers that meet citation i
        while i > s:                   # Stop at i == s
            i -= 1
            s += papers[i]             # s is updated by adding the number of papers of citation i - 1
        return i                       # Must return i, cannot return s. For example: [0], i is 0, s is 1, the answer should be 0
