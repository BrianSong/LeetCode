Write a program to check whether a given number is an ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5.

Example 1:

Input: 6
Output: true
Explanation: 6 = 2 × 3
Example 2:

Input: 8
Output: true
Explanation: 8 = 2 × 2 × 2
Example 3:

Input: 14
Output: false 
Explanation: 14 is not ugly since it includes another prime factor 7.
Note:

1 is typically treated as an ugly number.
Input is within the 32-bit signed integer range: [−231,  231 − 1].

Solution: ----------------------------- Math (how to factorize a number) ----------------- https://www.youtube.com/watch?v=1wpe7yeqZd0
------------------ In each division performed in the while loop n is getting reduced by at least half, so O(logn) T, O(1) S
class Solution(object):
    def isUgly(self, num):
        if not num:
            return False
        while num % 2 == 0:                   # num == 2^i * 3^j * 5^k
            num = num / 2.0
        while num % 3 == 0:
            num = num / 3.0
        while num % 5 == 0:
            num = num / 5.0
        return num == 1
        """
        :type num: int
        :rtype: bool
        """
