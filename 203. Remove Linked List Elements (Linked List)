Remove all elements from a linked list of integers that have value val.

Example:

Input:  1->2->6->3->4->5->6, val = 6
Output: 1->2->3->4->5

Solution: ------------------------------------------------------------- Linked List
------------------------------------------------------------- O(n) T, O(1) S
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def removeElements(self, head, val):
        """
        :type head: ListNode
        :type val: int
        :rtype: ListNode
        """
        if not head:
            return None
        dummynode = ListNode(0)
        prev = dummynode
        while head:
            if head.val == val:
                head = head.next
                prev.next = None                    # IMPORTANT !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                                    # MUST set the prev.next to None, if we do not do this,
                                                    # e.x.: [1,2,6,3,4,5,6] 6 will return 1,2,3,4,5,6
                                                    # the last 6 cannot be deleted because we do not assign a new value to prev.next
                                                    # the 5.next is still remain as 6
            else:
                prev.next = head
                prev = head
                head = head.next
        return dummynode.next
