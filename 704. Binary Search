Given a sorted (in ascending order) integer array nums of n elements and a target value, write a function to search target in nums. If target exists, then return its index, otherwise return -1.


Example 1:

Input: nums = [-1,0,3,5,9,12], target = 9
Output: 4
Explanation: 9 exists in nums and its index is 4

Example 2:

Input: nums = [-1,0,3,5,9,12], target = 2
Output: -1
Explanation: 2 does not exist in nums so return -1

Solution:
class Solution(object):
    def search(self, nums, target):
        left = 0
        right = len(nums) - 1 # - 1!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!VERY IMPORTANT!!!!!!!!!
        res = self.search_help(left, right, nums, target)
        return res
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
    def search_help(self, left, right, nums, target):
        while right >= left:
            middle = (left + right) / 2 # IN PYTHON 2, 3/2 = 1, 3//2 = 1, 3/2.0 = 1.5, 3//2.0 = 1
                                        # IN PYTHON 3, 3/2 = 1.5
            print middle
            if nums[middle] == target:
                return middle
            elif nums[middle] > target:
                right = middle - 1
            elif nums[middle] < target:
                left = middle + 1
        return -1
