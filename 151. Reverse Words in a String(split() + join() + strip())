Given an input string, reverse the string word by word.

 

Example 1:

Input: "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: "  hello world!  "
Output: "world! hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:

Input: "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
 

Note:

A word is defined as a sequence of non-space characters.
Input string may contain leading or trailing spaces. However, your reversed string should not contain leading or trailing spaces.
You need to reduce multiple spaces between two words to a single space in the reversed string.


Solution: --------------------------------------------------------- split() + join()
--------------------------------------------------------- O(n) T, O(n) S (string is immutable in Python)
class Solution(object):
    def reverseWords(self, s):
        """
        :type s: str
        :rtype: str
        """
        return ' '.join(s.split()[::-1])              # The split() method splits a string into a list
                                                      # You can specify the separator, default separator is any whitespace
                                                      # and the join() method can join all element in a list into a single string
                                                      # and the spacer between this element is defined by the argument before join()
                                                      # in this case is " " one whitespace. 
                                                      # Remember the spacer will not show up in the head or the tail
        # Python strip() 方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列
        # 注意：该方法只能删除开头或是结尾的字符，不能删除中间部分的字符
        # 只要头尾包含有指定字符序列中的字符就删除
        # str = "123abcrunoob321"
        # print (str.strip( '12' )) => "3abcrunoob3"
